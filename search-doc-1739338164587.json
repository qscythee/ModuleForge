{"searchDocs":[{"title":"Nexus","type":0,"sectionRef":"#","url":"/ModuleForge/api/Nexus","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#types","content":" ","version":null,"tagName":"h2"},{"title":"StartConfig​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#StartConfig","content":"&lt;/&gt; interface StartConfig { LoadOrder: {string}?-- A table of module paths that will be loaded in the order they are provided. PostInitPreStartCallback: (() → Promise)?-- A callback that is called after all modules have been Debug: boolean?-- Whether to log debug information. } initialized but before they are started.  ","version":null,"tagName":"h3"},{"title":"Module​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#Module","content":"&lt;/&gt; interface Module { Init: (self: Module) → ()?-- The method that is spawned syncronously when the module is initialized. Start: (self: Module) → ()?-- The method that is spawned asyncronously when the module is started. }  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#functions","content":" ","version":null,"tagName":"h2"},{"title":"ToggleDebug​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#ToggleDebug","content":"&lt;/&gt; Nexus.ToggleDebug(value: boolean?) → () Sets debug mode to the given value or flips the current value if no value is provided.  ","version":null,"tagName":"h3"},{"title":"GetModule​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#GetModule","content":"&lt;/&gt; Nexus.GetModule(name: string) → Module Returns a module by name. Will error if the module doesn't exist. Safety Modules are only safe to access after Nexus has started! If you try to access a module before Nexus has started, you could encounter unexpected behavior. local MyModule = Nexus.GetModule(&quot;MyModule&quot;) -- Safe ONLY after Nexus has started. MyModule:SomeMethod()   ","version":null,"tagName":"h3"},{"title":"GetNameFromModule​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#GetNameFromModule","content":"&lt;/&gt; Nexus.GetNameFromModule(module: Module) → string Returns the name of a module. local MyModule = Nexus.GetModule(&quot;MyModule&quot;) print(Nexus.GetNameFromModule(MyModule)) -- &quot;MyModule&quot;   ","version":null,"tagName":"h3"},{"title":"RegisterModulesIn​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#RegisterModulesIn","content":"&lt;/&gt; Nexus.RegisterModulesIn( dir: Folder | ModuleScript | {Folder | ModuleScript },-- The directory or directories predicate: (moduleScript: ModuleScript ) → boolean,-- The predicate to filter modules. depth: number?-- The depth to recursively search for modules. Defaults to math.huge. ) → () Recursively registers modules in the provided directories. to search for modules.  ","version":null,"tagName":"h3"},{"title":"RegisterModule​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#RegisterModule","content":"&lt;/&gt; Nexus.RegisterModule(module: Module) → () Registers a module to be loaded by Nexus. This method should be called before Nexus.Start is called.  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#Start","content":"&lt;/&gt; Nexus.Start( config: StartConfig?-- The configuration for starting Nexus. ) → Promise-- A promise that is resolved once Nexus has fully started. Starts Nexus by initializing and starting all registered modules. Call Once Can only be called once. Calling more than once will throw an error. You cannot register modules after Nexus has started. Nexus.ToggleDebug(true) Nexus.Start({ LoadOrder = { &quot;MyOtherModule&quot;, &quot;MyModule&quot;, }, PostInitPreStartCallback = function() print(&quot;All modules have been initialized, about to start them!&quot;) end, Debug = true, -- Same as calling Nexus.ToggleDebug(true) }):andThen(function() print(&quot;Nexus has fully started!&quot;) end):catch(warn)   ","version":null,"tagName":"h3"},{"title":"PromiseOnStarted​","type":1,"pageTitle":"Nexus","url":"/ModuleForge/api/Nexus#PromiseOnStarted","content":"&lt;/&gt; Nexus.PromiseOnStarted() → Promise Returns a promise that is resolved once Nexus has fully started. This is useful for any code that needs to tie into Nexus modules but is not the script that called Start. Nexus.PromiseOnStarted():andThen(function() local MyModule = Nexus.GetModule(&quot;MyModule&quot;) MyModule:SomeMethod() end):catch(warn)  ","version":null,"tagName":"h3"}],"options":{"id":"default"}}